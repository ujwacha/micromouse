(undo-tree-save-format-version . 1)
"da39a3ee5e6b4b0d3255bfef95601890afd80709"
[nil nil nil nil (26033 26159 465622 866000) 0 nil]
([nil nil ((16 . 28) (15 . 16) (14 . 15) (#(";" 0 1 (fontified t)) . -14) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 15 (14 . 15) (12 . 14) (10 . 12) (#("1" 0 1 (fontified t face font-lock-variable-name-face)) . -10) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 12 (10 . 12) (#("1" 0 1 (fontified t face font-lock-variable-name-face)) . -10) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -12) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t)) . -13) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 14 (11 . 14) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 12 (11 . 12) (#(" " 0 1 (fontified t)) . -11) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 12 (9 . 12) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -9) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -10) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -11) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -12) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -13) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -14) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t)) . -15) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 16 (10 . 16) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -10) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -11) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -12) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -13) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -14) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 15 (5 . 15) (#("i" 0 1 (fontified t face font-lock-preprocessor-face)) . -5) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 6 (2 . 6) (1 . 2) (t . -1)) nil (26033 26159 465592 911000) 0 nil])
([nil nil ((28 . 30)) nil (26033 26159 465414 508000) 0 nil])
([nil current ((#("#define S1 19
#define S2 18

" 0 1 (fontified t c-in-sws t c-is-sws t face font-lock-preprocessor-face) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t) 8 9 (fontified t c-in-sws t face font-lock-variable-name-face) 9 10 (fontified t c-in-sws t face font-lock-variable-name-face) 10 11 (fontified t c-in-sws t) 11 12 (fontified t c-in-sws t) 12 13 (fontified t c-in-sws t) 13 14 (fontified t c-in-sws t) 14 15 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face) 15 16 (fontified t c-in-sws t face font-lock-preprocessor-face) 16 17 (fontified t c-in-sws t face font-lock-preprocessor-face) 17 18 (fontified t c-in-sws t face font-lock-preprocessor-face) 18 19 (fontified t c-in-sws t face font-lock-preprocessor-face) 19 20 (fontified t c-in-sws t face font-lock-preprocessor-face) 20 21 (fontified t c-in-sws t face font-lock-preprocessor-face) 21 22 (fontified t c-in-sws t) 22 23 (fontified t c-in-sws t face font-lock-variable-name-face) 23 24 (fontified t c-in-sws t face font-lock-variable-name-face) 24 25 (fontified t c-in-sws t) 25 26 (fontified t c-in-sws t) 26 27 (fontified t c-in-sws t) 27 28 (fontified t c-in-sws t) 28 29 (fontified t c-is-sws t)) . 1) (undo-tree-id0 . -14) (undo-tree-id1 . -27) (undo-tree-id2 . -11) (undo-tree-id3 . -28) (undo-tree-id4 . -28) (undo-tree-id5 . -28) (undo-tree-id6 . -28) (undo-tree-id7 . -29) (undo-tree-id8 . -28)) nil (26033 26159 465404 396000) 0 nil])
nil
